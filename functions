{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d6d6e9c8-c61e-4742-9ceb-d58bb5399e0a",
   "metadata": {},
   "outputs": [],
   "source": [
    "a,b,c,d = 10,20,30,40"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f94b7a24-63c3-4d02-bb5b-02eeebaf01d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d9b4d5c1-180d-4e41-988b-a49a95b718a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "40"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5c6da66a-9fbb-4ef7-8fb4-782357c48d4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test4():\n",
    "    a=5+6/7\n",
    "    return a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2e9edd80-2b43-4995-8eeb-59b75d3cd479",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.857142857142857"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test4()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7248bca6-5366-4c52-b8f4-dfd8827ae58f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test5(a,b,c):\n",
    "    d= a+b/c\n",
    "    return d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e6eec36c-5f4b-4afa-a7bd-1351c33ea681",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.625"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test5(2,5,8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "20f39e27-8afd-4960-aa44-2d1f2e8ea106",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test6(a,b) :\n",
    "    return a+b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e2d836c4-0b3b-45d5-bb41-4bf7bee7ed3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test6 (3,4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "44cb216f-eb7f-465f-a472-954204105f02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'sudhkumar'"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test6 (\"sudh\" , \"kumar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "65d4a2d8-516b-4c24-86dc-7a381fdb6f78",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6, 4, 5, 6, 7, 0]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test6 ([1,2,3,4,5,6] , [4,5,6,7,0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "b9d356a7-705c-4a84-a1df-11497ca5f49a",
   "metadata": {},
   "outputs": [],
   "source": [
    "l = [1,2,3,4,5,6, \"shah\" , \"khan\", [1,2,3,4,5,6]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "5c577370-b36d-4a59-a600-385c3c1c6ea9",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (3824868815.py, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[30], line 3\u001b[0;36m\u001b[0m\n\u001b[0;31m    if type(i) == int or type=(i) == float :\u001b[0m\n\u001b[0m                             ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "l1 = []\n",
    "for i in l :\n",
    "    if type(i) == int or type=(i) == float :\n",
    "        l1.append(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "1a1fc67f-afdc-4bce-af82-c8908b053c71",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (2548488052.py, line 7)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[32], line 7\u001b[0;36m\u001b[0m\n\u001b[0;31m    else :\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "def test8(a) :\n",
    "    l= []\n",
    "    for i in a :\n",
    "        if type (i) == list:\n",
    "            for j in i:\n",
    "                i.append(j)\n",
    "                else :\n",
    "                    if type(i) == int or type(i) == float :\n",
    "                        l.append(i)\\\n",
    "                        return l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "6240742a-a6e8-4624-8045-d057b895896f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this is my print\n"
     ]
    }
   ],
   "source": [
    "print(\"this is my print\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "53d36f9a-2c62-4b9c-ab48-68098218951d",
   "metadata": {},
   "outputs": [],
   "source": [
    "l = [324,4356,56,]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "c279aa58-d2e3-4ea6-ac52-352be473a9f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(l)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "7e845cf1-e30f-4eb0-93de-6789694ba40d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(l)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "e6997475-b89b-46b0-9307-b5e3fc8b1b58",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test():\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "01d51f81-6784-4a76-a816-a264540e3036",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test1():\n",
    "    print(\"this is my very very first fuction\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "489b442d-81f8-480f-a74b-2a4ad367d503",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this is my very very first fuction\n"
     ]
    }
   ],
   "source": [
    "test1()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "f341d2ba-6583-4184-93eb-b4d8280f4cea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this is my very very first fuction\n"
     ]
    },
    {
     "ename": "TypeError",
     "evalue": "unsupported operand type(s) for +: 'NoneType' and 'str'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[46], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mtest1\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mShahbaz\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\n",
      "\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for +: 'NoneType' and 'str'"
     ]
    }
   ],
   "source": [
    "test1() + \"Shahbaz\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "09a7e29a-ae73-410e-a1c9-c69918bb046f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test2() :\n",
    "    return \"this is very my first return\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "e8490dbd-cdad-4e3a-97ce-7672096e053d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'this is very my first return'"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test2()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "19f8ff7e-2d19-4870-ad83-8e2f36342ab4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'this is very my first returnshahbaz'"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test2() + \"shahbaz\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "d3ffb638-1f9f-4c5a-8a13-8e1004352c8e",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test3() :\n",
    "    \n",
    "    return \"shah\", 23,456,[1,2,4,5,]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "4f8d5120-8002-4b26-9e30-c43f14164ce6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('shah', 23, 456, [1, 2, 4, 5])"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test3()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "a699f583-fb79-4d3c-864a-4b1698048c1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "function"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(test3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "ee152496-d11a-45ed-88b8-e5af514e63bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "a,b,c,d= test3()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "beb257bb-10b9-4c01-91e8-4846f6f8d72e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'shah'"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "05c6a3cd-12c6-4118-8751-a7c2ab1328ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 4, 5]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "0c674474-f936-468a-a6b7-2e4f029163a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test4() : \n",
    "    a= 5+6/7\n",
    "    return a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "d7aacd73-056a-4d07-ba34-8bc0142b56b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.857142857142857"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test4()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "b5e0562f-c37f-4ddd-88fe-1ac1384fa1d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test5(a,b,c) :\n",
    "    d= a+b/c\n",
    "    return d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "40f4ebef-747e-4fac-920f-07a6692e88d7",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "test5() missing 3 required positional arguments: 'a', 'b', and 'c'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[63], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mtest5\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
      "\u001b[0;31mTypeError\u001b[0m: test5() missing 3 required positional arguments: 'a', 'b', and 'c'"
     ]
    }
   ],
   "source": [
    "test5()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "552278a9-44c2-4848-ae37-9b620656a4bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.75"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test5(2,3,4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "1c24dd87-a443-485c-b7ca-189b8cabd6f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "def test6(a,b):\n",
    "    return a+b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "3ae891e9-c275-4cd5-a8e8-9ba01c698ee6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test6(3,4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "864e8e3b-8b86-4124-bfc7-a83b07d809d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'shahkhan'"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test6( \"shah\", \"khan\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "690ea53d-8eff-45f0-b28a-430f598a25ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6, 4, 5, 6]"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test6([1,2,3,4,5,6],[4,5,6])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "32027806-a288-4159-aa52-0a250eef72e4",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
